{"version":3,"sources":["components/KnockoutText.js","components/AudioPlayer.js","App.js","serviceWorker.js","index.js"],"names":["KnockoutText","font_size","this","props","fontSize","offest_x","offset_x","offest_y","offset_y","TextWrap","ID","viewBox","id","patternUnits","width","height","x","y","href","src","textAnchor","dy","className","txt","colorOverlay","x1","y1","x2","y2","stopColor","offset","React","Component","styled","div","AudioPlayer","initialize","initialized","playerEl","document","getElementById","endHandler","next_btnHandler","addEventListener","play_btnHandler","play","pause_btnHandler","pause","volUp_btnHandler","newVolume","volume","Math","round","console","log","volDown_btnHandler","prev_btnHandler","currentCue","songList","length","changeSong","cue","setState","currentSong","URL","state","fetch","then","response","json","data","tracks","catch","err","removeEventListener","Container","Title","title","ArtistName","artist","controls","autoPlay","Controls","onClick","Playlist","SongList","map","song","i","SongListItem","key","Credit","h1","h5","p","table","tbody","tr","App","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4nBAyDeA,E,iLApDX,IAAMC,EAAYC,KAAKC,MAAMC,UAAa,QACpCC,EAAWH,KAAKC,MAAMG,UAAY,OAClCC,EAAWL,KAAKC,MAAMK,UAAY,OACxC,OACE,kBAACC,EAAD,CAAUC,GAAIR,KAAKC,MAAMO,GAAIN,SAAUH,GACrC,yBAAKU,QAAQ,cACX,6BACEC,GAAE,gBAAWV,KAAKC,MAAMO,IACxBC,QAAQ,cACRE,aAAa,iBACbC,MAAM,OACNC,OAAO,OACPC,EAAGX,EACHY,EAAGV,GAEH,2BACEW,KAAMhB,KAAKC,MAAMgB,IACjBL,MAAM,MACNC,OAAO,SAGX,0BACEK,WAAW,SACXJ,EAAE,MACFC,EAAE,MACFI,GAAG,QACHC,UAAU,aAETpB,KAAKC,MAAMoB,KAEbrB,KAAKC,MAAMqB,cACZ,oCAAgBZ,GAAE,qBAAgBV,KAAKC,MAAMO,IAAMe,GAAG,IAAIC,GAAG,IAAIC,GAAG,OAAOC,GAAG,QAC5E,0BAAMC,UAAU,2BAA2BC,OAAO,QAClD,0BAAMD,UAAU,4BAA4BC,OAAO,QACnD,0BAAMD,UAAU,4BAA4BC,OAAO,SAGrD,0BACEV,WAAW,SACXJ,EAAE,MACFC,EAAE,MACFI,GAAG,QACHC,UAAU,kBAETpB,KAAKC,MAAMoB,W,GA9CGQ,IAAMC,WAwD3BvB,EAAWwB,IAAOC,IAAV,KAQC,SAAA/B,GAAK,OAAIA,EAAMC,YAIP,SAAAD,GAAK,OAAIA,EAAMO,M,04DC6DvByB,E,YA9HX,WAAYhC,GAAQ,IAAD,8BACf,4CAAMA,KA8BViC,WAAa,WAET,EAAKC,aAAc,EACnB,EAAKC,SAAWC,SAASC,eAAe,UACxC,EAAKC,WAAa,SAAAzB,GAAC,OAAI,EAAK0B,mBAC5B,EAAKJ,SAASK,iBAAiB,QAAS,EAAKF,aApC9B,EAuCnBG,gBAAkB,WACd,EAAKN,SAASO,QAxCC,EA2CnBC,iBAAmB,WACf,EAAKR,SAASS,SA5CC,EA+CnBC,iBAAmB,WACf,IAAMC,EAAqC,IAAzB,EAAKX,SAASY,OAAe,EAAIC,KAAKC,MAA6B,GAAvB,EAAKd,SAASY,OAAc,GAAK,GAC/FG,QAAQC,IAAI,YAAaL,GACzB,EAAKX,SAASY,OAASD,GAlDR,EAqDnBM,mBAAqB,WACjB,IAAMN,EAAqC,IAAzB,EAAKX,SAASY,OAAe,EAAIC,KAAKC,MAA6B,GAAvB,EAAKd,SAASY,OAAc,GAAK,GAC/FG,QAAQC,IAAI,YAAaL,GACzB,EAAKX,SAASY,OAASD,GAxDR,EA2DnBO,gBAAkB,WACd,EAAKC,YAAc,EAAKA,YAAc,EAAKC,SAASC,OAAS,IAAM,EAAKD,SAASC,OACjF,EAAKC,cA7DU,EAgEnBlB,gBAAkB,SAACmB,GACf,EAAKJ,WAA6B,kBAARI,GAAqB,EAAKJ,WAAa,GAAK,EAAKC,SAASC,OAASE,EAC7F,EAAKD,cAlEU,EAqEnBA,WAAa,WACT,EAAKE,SAAS,CACVC,YAAa,EAAKL,SAAS,EAAKD,cAEpC,EAAKnB,SAASnB,IAAM,EAAKuC,SAAS,EAAKD,YAAYO,KAvEnD,EAAKN,SAAW,CAAC,MACjB,EAAKD,WAAa,EAClB,EAAKpB,aAAc,EACnB,EAAK4B,MAAQ,CACTF,YAAa,EAAKL,SAAS,EAAKD,aANrB,E,iFAUE,IAAD,OAChBS,MAAM,4BAA4BC,MAAK,SAAAC,GACnC,OAAOA,EAASC,UACjBF,MAAK,SAAAG,GACJ,EAAKZ,SAAWY,EAAKC,OACrB,EAAKT,SAAS,CACVC,YAAa,EAAKL,SAAS,EAAKD,iBAErCe,OAAM,SAAAC,GACLpB,QAAQC,IAAI,sBAAwBmB,Q,6CAKxCvE,KAAKoC,SAASoC,oBAAoB,QAASxE,KAAKuC,c,4CAIvB,IAArBvC,KAAKmC,aAAoD,OAA3BnC,KAAK+D,MAAMF,aAAsB7D,KAAKkC,e,+BAgDlE,IAAD,OAEL,OAA+B,OAA3BlC,KAAK+D,MAAMF,YAA6B,uCAGxC,kBAACY,EAAD,KACI,kBAAC,EAAD,CAAcjE,GAAG,iBAAiBa,IAAI,QAClCnB,SAAS,OAAOE,SAAS,GAAGE,SAAS,OACrCW,IAAI,gEAGR,kBAACyD,EAAD,oBAEA,kBAAC,EAAD,CAAclE,GAAG,uBAAuBa,IAAKrB,KAAK+D,MAAMF,YAAYc,MAChEzE,SAAS,OAAOE,SAAS,GAAGE,SAAS,OAAOgB,cAAc,EAC1DL,IAAI,8DAIR,kBAAC2D,EAAD,WAAgB5E,KAAK+D,MAAMF,YAAYgB,QAEvC,2BAAOC,UAAQ,EAACC,UAAQ,EAACrE,GAAG,SAASO,IAAKjB,KAAKwD,SAASxD,KAAKuD,YAAYO,MAEzE,kBAACkB,EAAD,KACI,4BAAQC,QAASjF,KAAK0C,gBAAiBtB,UAAU,gBAAjD,QACA,4BAAQ6D,QAASjF,KAAK4C,kBAAtB,SACA,4BAAQqC,QAASjF,KAAK8C,kBAAtB,SACA,4BAAQmC,QAASjF,KAAKqD,oBAAtB,SACA,4BAAQ4B,QAASjF,KAAKsD,iBAAtB,YACA,4BAAQ2B,QAASjF,KAAKwC,gBAAiBpB,UAAU,cAAjD,SAGJ,kBAAC8D,EAAD,KACI,kBAACC,EAAD,KACKnF,KAAKwD,SAAS4B,KAAI,SAACC,EAAMC,GAAP,OACf,kBAACC,EAAD,CAAcC,IAAK,IAAMF,EAAGL,QAAS,kBAAM,EAAKzC,gBAAgB8C,KAC5D,wBAAIlE,UAAU,iBAAd,IAAiCkE,IAAM,EAAK/B,YAAc,IAA1D,KACA,gCAAM8B,EAAKV,MAAX,KACA,oCAAUU,EAAKR,OAAf,WAMhB,kBAACY,EAAD,uF,GAzHU5D,IAAMC,WAkI1B4C,EAAQ3C,IAAO2D,GAAV,KAGLd,EAAa7C,IAAO4D,GAAV,KAGVF,EAAS1D,IAAO6D,EAAV,KAGNV,EAAWnD,IAAO8D,MAAV,KAKRV,EAAWpD,IAAO+D,MAAV,KACRP,EAAexD,IAAOgE,GAAV,KAaZtB,EAAY1C,IAAOC,IAAV,KAOTgD,EAAWjD,IAAOC,IAAV,KCvJCgE,MAff,WACE,OACE,yBAAK5E,UAAU,OACb,4BAAQA,UAAU,cAGhB,kBAAC,EAAD,SCEY6E,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASlE,SAASC,eAAe,SD2H3C,kBAAmBkE,WACrBA,UAAUC,cAAcC,MAAMzC,MAAK,SAAA0C,GACjCA,EAAaC,kB","file":"static/js/main.1477d303.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nclass KnockoutText extends React.Component {\r\n  render() {\r\n    const font_size = this.props.fontSize  || '100px'\r\n    const offest_x = this.props.offset_x || \"-50%\"\r\n    const offest_y = this.props.offset_y || \"-50%\"\r\n    return (\r\n      <TextWrap ID={this.props.ID} fontSize={font_size} >\r\n        <svg viewBox=\"0 0 500 80\">\r\n          <pattern\r\n            id={`p-img_${this.props.ID}`}\r\n            viewBox=\"0 0 500 100\"\r\n            patternUnits=\"userSpaceOnUse\"\r\n            width=\"300%\"\r\n            height=\"300%\"\r\n            x={offest_x}\r\n            y={offest_y}\r\n          >\r\n            <image\r\n              href={this.props.src}\r\n              width=\"300\"\r\n              height=\"200\"\r\n            />\r\n          </pattern>\r\n          <text\r\n            textAnchor=\"middle\"\r\n            x=\"50%\"\r\n            y=\"50%\"\r\n            dy=\".35em\"\r\n            className=\"img-layer\"\r\n          >\r\n            {this.props.txt}\r\n          </text>\r\n          {this.props.colorOverlay &&\r\n          <linearGradient id={`gr-overlay_${this.props.ID}`} x1=\"0\" y1=\"0\" x2=\"100%\" y2=\"100%\">\r\n            <stop stopColor=\"hsla(50, 100%, 70%, 0.5)\" offset=\"10%\" />\r\n            <stop stopColor=\"hsla(200, 100%, 60%, 0.5)\" offset=\"50%\" />\r\n            <stop stopColor=\"hsla(320, 100%, 50%, 0.5)\" offset=\"90%\" />\r\n          </linearGradient>\r\n          }\r\n          <text\r\n            textAnchor=\"middle\"\r\n            x=\"50%\"\r\n            y=\"50%\"\r\n            dy=\".35em\"\r\n            className=\"gradient-layer\"\r\n          >\r\n            {this.props.txt}\r\n          </text>\r\n        </svg>\r\n      </TextWrap>\r\n    );\r\n  }\r\n}\r\n\r\nexport default KnockoutText;\r\n\r\nconst TextWrap = styled.div`\r\nmargin: 0;\r\nposition: relative;\r\nwidth: 100%;\r\n\r\nsvg {\r\n  width: 100%;\r\n  height: auto;\r\n  font: bold ${props => props.fontSize} sans-serif;\r\n//   text-transform: uppercase;\r\n  \r\n  .img-layer {\r\n    fill: url(#p-img_${props => props.ID});\r\n  }\r\n  \r\n  .gradient-layer {\r\n    fill: url(#gr-overlay);\r\n  }\r\n}\r\n\r\n`\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport KnockoutText from './KnockoutText'\r\n\r\n\r\nclass AudioPlayer extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.songList = [null]\r\n        this.currentCue = 0\r\n        this.initialized = false\r\n        this.state = {\r\n            currentSong: this.songList[this.currentCue]\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('./playlist/playlist.json').then(response => {\r\n            return response.json();\r\n        }).then(data => {\r\n            this.songList = data.tracks\r\n            this.setState({\r\n                currentSong: this.songList[this.currentCue]\r\n            })\r\n        }).catch(err => {\r\n            console.log(\"Error Reading data \" + err);\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.playerEl.removeEventListener(\"ended\", this.endHandler)\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.initialized === false && this.state.currentSong !== null) this.initialize()\r\n    }\r\n\r\n    initialize = () => {\r\n        // console.log(\"initialize only once\")\r\n        this.initialized = true\r\n        this.playerEl = document.getElementById('player')\r\n        this.endHandler = x => this.next_btnHandler()\r\n        this.playerEl.addEventListener('ended', this.endHandler)\r\n    }\r\n\r\n    play_btnHandler = () => {\r\n        this.playerEl.play()\r\n    }\r\n\r\n    pause_btnHandler = () => {\r\n        this.playerEl.pause()\r\n    }\r\n\r\n    volUp_btnHandler = () => {\r\n        const newVolume = this.playerEl.volume === 1 ? 1 : Math.round(this.playerEl.volume * 10 + 1) / 10\r\n        console.log(\"newVolume\", newVolume)\r\n        this.playerEl.volume = newVolume\r\n    }\r\n\r\n    volDown_btnHandler = () => {\r\n        const newVolume = this.playerEl.volume === 0 ? 0 : Math.round(this.playerEl.volume * 10 - 1) / 10\r\n        console.log(\"newVolume\", newVolume)\r\n        this.playerEl.volume = newVolume\r\n    }\r\n\r\n    prev_btnHandler = () => {\r\n        this.currentCue = (this.currentCue + (this.songList.length - 1)) % this.songList.length\r\n        this.changeSong()\r\n    }\r\n\r\n    next_btnHandler = (cue) => {\r\n        this.currentCue = (typeof cue !== 'number') ? (this.currentCue + 1) % this.songList.length : cue\r\n        this.changeSong()\r\n    }\r\n\r\n    changeSong = () => {\r\n        this.setState({\r\n            currentSong: this.songList[this.currentCue]\r\n        })\r\n        this.playerEl.src = this.songList[this.currentCue].URL\r\n    }\r\n\r\n    render() {\r\n        // console.log(\"this.state.currentSong\", this.state.currentSong)\r\n        if (this.state.currentSong === null) return <h1>loading</h1>\r\n\r\n        return (\r\n            <Container>\r\n                <KnockoutText ID=\"React_knockout\" txt=\"REACT\"\r\n                    fontSize=\"90px\" offset_x=\"\" offset_y=\"100%\"\r\n                    src=\"https://media3.giphy.com/media/5UH51qWQaShz7KCug8/giphy.gif\"\r\n                />\r\n\r\n                <Title >AudioPlayer</Title>\r\n\r\n                <KnockoutText ID=\"AudioPlayer_knockout\" txt={this.state.currentSong.title}\r\n                    fontSize=\"50px\" offset_x=\"\" offset_y=\"-140\" colorOverlay={true}\r\n                    src=\"https://media.giphy.com/media/l49FlFL6PPPxYKNEs/giphy.gif\"\r\n\r\n                />\r\n\r\n                <ArtistName>by {this.state.currentSong.artist}</ArtistName>\r\n\r\n                <audio controls autoPlay id=\"player\" src={this.songList[this.currentCue].URL} ></audio>\r\n\r\n                <Controls>\r\n                    <button onClick={this.play_btnHandler} className=\"button-start\">Play</button>\r\n                    <button onClick={this.pause_btnHandler}>Pause</button>\r\n                    <button onClick={this.volUp_btnHandler}>Vol+ </button>\r\n                    <button onClick={this.volDown_btnHandler}>Vol- </button>\r\n                    <button onClick={this.prev_btnHandler}>Previous</button>\r\n                    <button onClick={this.next_btnHandler} className=\"button-end\">Next</button>\r\n                </Controls>\r\n\r\n                <Playlist>\r\n                    <SongList>\r\n                        {this.songList.map((song, i) => (\r\n                            <SongListItem key={\"k\" + i} onClick={() => this.next_btnHandler(i)} >\r\n                                <td className=\"playIndicator\" > {i === this.currentCue && \">\"} </td>\r\n                                <td> {song.title} </td>\r\n                                <td>  by {song.artist} </td>\r\n                            </SongListItem>\r\n                        ))}\r\n                    </SongList>\r\n                </Playlist>\r\n\r\n                <Credit>Simple audio player example built in React Copyright 2019 Joseph B Howard</Credit>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AudioPlayer\r\n\r\n\r\nconst Title = styled.h1`\r\n    margin-top: 0;\r\n`\r\nconst ArtistName = styled.h5`\r\n    margin-top: 0\r\n`\r\nconst Credit = styled.p`\r\n    font-size: 0.85rem;\r\n`\r\nconst Playlist = styled.table`\r\n    width: 100%;\r\n    margin-top: 3rem;\r\n    margin-bottom: 3rem;\r\n`\r\nconst SongList = styled.tbody``\r\nconst SongListItem = styled.tr`\r\n    cursor: pointer;\r\n    display: flex;\r\n    justify-content: flex-start;       \r\n    color: #2288fe;\r\n    :hover {\r\n        color: white;\r\n    }\r\n    justify-content: space-between;\r\n    .playIndicator {\r\n        width: 2rem;\r\n    }\r\n`\r\nconst Container = styled.div`\r\n    margin: 2rem;\r\n    padding: 2rem;\r\n    border-radius: 20px;\r\n    box-shadow: inset 0 0 5px 5px #233498;\r\n    background: linear-gradient(180deg, black, #243968);\r\n`\r\nconst Controls = styled.div`\r\n    margin-top: 1.5rem;\r\n    padding: 1rem;\r\n    border-radius: 2rem;\r\n    box-shadow:  0 0 5px 5px #2439c8;\r\n    // background: linear-gradient(0deg, black, transparent);\r\n    background: url(\"https://media3.giphy.com/media/5UH51qWQaShz7KCug8/giphy.gif\");\r\n    background-size: cover;\r\n    background-position: 0px 300px ;\r\n    display: flex;\r\n    justify-content: center;\r\n    .button-start {\r\n        border-radius: 1rem 0 0 1rem;\r\n    }\r\n    .button-end {\r\n        border-radius: 0 1rem 1rem 0;\r\n    }\r\n    button {\r\n        box-shadow: inset 0 0 3px 3px #4354f8;\r\n        border: 0;\r\n        color: #aaaaff;\r\n        background: linear-gradient(0deg, #233498, black);\r\n        font-size: 2rem;\r\n        padding-left: 1rem;\r\n        padding-right: 1rem;    \r\n        :hover {\r\n            color: white;\r\n        }\r\n    }\r\n`\r\n","import React from 'react';\nimport './App.css';\nimport AudioPlayer from './components/AudioPlayer'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n\n\n        <AudioPlayer />\n\n\n\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}